# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.2-node-browsers
      - image: circleci/php:7.2-fpm-browsers-legacy


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: haposoft_manage_test
          MYSQL_USER: root
          MYSQL_PASSWORD:
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo apt-get install libpng-dev libfreetype6-dev libjpeg-dev
      - run: sudo docker-php-ext-configure gd --with-gd --with-jpeg-dir --with-png-dir
      - run: sudo docker-php-ext-install pdo_mysql zip gd

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run dev
      # prepare the database
      - run: cp .env.testing .env
      - run: php artisan migrate --env=testing --database=haposoft_manage_test --force
      - run:
          name: "Run tests"
          command: phpdbg -qrr vendor/bin/phpunit

workflows:
  version: 2
  notify_deploy:
    jobs:
      - build